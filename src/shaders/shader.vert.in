#version 450

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 color;
layout(location = 2) in vec3 normalVec;
layout(location = 4) in float shininess;
layout(location = 3) in vec4 rotation;

layout(location = 0) out Output {
    vec4 color;
    vec3 position;
    vec3 normal;
	double shininess;
} outputs;

void main() {
    //Passthroughs

//    vec4 q = vec4(rotation.x, -rotation.y, -rotation.z, -rotation.w);
//    vec4 p = vec4(0.0, position);

//    vec4 hold = vec4(
//        -(q.y * p.y) - (q.z * p.z) - (q.w * p.w),
//        (q.x * p.y) - (q.z * p.w) + (q.w * p.z), 
//        (q.x * p.z) + (q.y * p.w) - (q.w * p.y),
//        (q.x * p.w) - (q.y * p.z) - (q.z * p.y)
//    );

//    q = hold;
//    p = rotation;

//    hold = vec4(
//        -(q.y * p.y) - (q.z * p.z) - (q.w * p.w),
//        (q.x * p.y) - (q.z * p.w) + (q.w * p.z), 
//        (q.x * p.z) + (q.y * p.w) - (q.w * p.y),
//        (q.x * p.w) - (q.y * p.z) - (q.z * p.y)
//    );

    //gl_Position = vec4(hold.wyz, 0.0);
    //outputs.fragPos = hold.yzw;
    outputs.color = vec4(color, 0.0);
    outputs.position = position;
    outputs.shininess = shininess;
    outputs.normal = normalize(normalVec);
}