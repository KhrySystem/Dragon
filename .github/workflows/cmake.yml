name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: RelWithDebInfo
  BOOST_INSTALL_VERSION: 1.79.0
  VULKAN_INSTALL_VERSION: 1.3.204.0
  BOOST_CMAKE_ARGS: -DBOOST_ROOT:Path=${{ github.workspace}}/boost -DBoost_INCLUDE_DIR:Path=${{github.workspace}}/boost/include

jobs:
  build-linux-unix-makefiles:
    runs-on: ubuntu-latest

    env: 
      VULKAN_CMAKE_ARGS: -DVulkan_INCLUDE_DIR:Path=${VULKAN_SDK}/include -DVulkan_LIBRARY:Path=${VULKAN_SDK}/bin/vulkan-1.lib

    steps:
    - uses: actions/checkout@v3

    - name: Install GLFW Dependencies
      run: sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      
    - name: Install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.0
      with:
        boost_version: ${{ env.BOOST_INSTALL_VERSION }}
        platform_version: 20.04
        toolset: gcc

    - name: Install OpenCL
      uses: KhrySystem/install-opencl@v1.0.1
      with: 
        version: v2022.09.30
        cache: true
        cmake_args: '-G"Unix Makefiles"'
        path: opencl

    - name: Install Vulkan
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with: 
        vulkan-query-version: ${{ env.VULKAN_INSTALL_VERSION }}
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, SPIRV-Headers
        vulkan-use-cache: true
          
    - name: Get DragonEngine Submodules
      run: git submodule update --init --recursive

    - name: Configure DragonEngine CMake Scripts
      run: cmake -S${{github.workspace}} -B${{github.workspace}}/bin --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -B${{github.workspace}}/bin -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDRAGON_INSTALL_DIR:Path="${{github.workspace}}/sdk_build" ${{ env.BOOST_CMAKE_ARGS }} ${{ env.VULKAN_CMAKE_ARGS }}

    - name: Build DragonEngine
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Test DragonEngine
      working-directory: ${{github.workspace}}/bin
      run: ctest -C ${{env.BUILD_TYPE}}
      
  build-macos-xcode-clang:
    runs-on: macos-12

    env: 
      VULKAN_CMAKE_ARGS: -DVulkan_INCLUDE_DIR:Path=${VULKAN_SDK}/include -DVulkan_LIBRARY:Path=${VULKAN_SDK}/bin/vulkan-1.lib
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.0
      with:
        boost_version: ${{ env.BOOST_INSTALL_VERSION }}
        platform_version: 11
        toolset: clang
        
    - name: Install OpenCL
      uses: KhrySystem/install-opencl@v1.0.1
      with: 
        version: v2022.09.30
        cache: true
        cmake_args: ''
        path: opencl
    
    - name: Install Vulkan
      id: install-vulkan
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with: 
        vulkan-query-version: ${{ env.VULKAN_INSTALL_VERSION }}
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, SPIRV-Headers
        vulkan-use-cache: true

    - name: Get DragonEngine Submodules
      run: git submodule update --init --recursive
    
    - name: Configure DragonEngine CMake Scripts
      run: cmake -S${{github.workspace}} -B${{github.workspace}}/bin --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDRAGON_INSTALL_DIR:String="${{github.workspace}}/sdk_build" ${{ env.BOOST_CMAKE_ARGS }} ${{ env.VULKAN_CMAKE_ARGS }}
      
    - name: Build DragonEngine
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Test DragonEngine
      working-directory: ${{github.workspace}}/bin
      run: ctest -C ${{env.BUILD_TYPE}}

  build-windows-vs-2019:
    runs-on: windows-2019

    env: 
      VULKAN_CMAKE_ARGS: -DVulkan_INCLUDE_DIR:Path=${VULKAN_SDK}/include -DVulkan_LIBRARY:Path=${VULKAN_SDK}/bin/vulkan-1.lib
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.0
      with:
        boost_version: ${{ env.BOOST_INSTALL_VERSION }}
        platform_version: 2019
        toolset: msvc 
        
    - name: Install OpenCL
      uses: KhrySystem/install-opencl@v1.0.1
      with: 
        version: v2022.09.30
        cache: true
        cmake_args: '-G"Visual Studio 16 2019"'
        path: opencl
    
    - name: Install Vulkan
      id: install-vulkan
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with: 
        vulkan-query-version: ${{ env.VULKAN_INSTALL_VERSION }}
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, SPIRV-Headers
        vulkan-use-cache: true

    - name: Get DragonEngine Submodules
      run: git submodule update --init --recursive
    
    - name: Configure DragonEngine CMake Scripts
      run: cmake -S${{github.workspace}} -B${{github.workspace}}/bin -G"Visual Studio 16 2019" --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDRAGON_INSTALL_DIR:String="${{github.workspace}}/sdk_build" ${{ env.BOOST_CMAKE_ARGS }} ${{ env.VULKAN_CMAKE_ARGS }}
      
    - name: Build DragonEngine
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Test DragonEngine
      working-directory: ${{github.workspace}}/bin
      run: ctest -C ${{env.BUILD_TYPE}}

  build-windows-vs-2022:
    runs-on: windows-2022

    env: 
      VULKAN_CMAKE_ARGS: -DVulkan_INCLUDE_DIR:Path=${VULKAN_SDK}/include -DVulkan_LIBRARY:Path=${VULKAN_SDK}/bin/vulkan-1.lib
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.0
      with:
        boost_version: ${{ env.BOOST_INSTALL_VERSION }}
        platform_version: 2019
        toolset: msvc 
    
    - name: Install OpenCL
      uses: KhrySystem/install-opencl@v1.0.1
      with: 
        version: v2022.09.30
        cache: true
        cmake_args: '-G"Visual Studio 17 2022"'
        path: opencl
    
    - name: Install Vulkan
      id: install-vulkan
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with: 
        vulkan-query-version: ${{ env.VULKAN_INSTALL_VERSION }}
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, SPIRV-Headers
        vulkan-use-cache: true

    - name: Get DragonEngine Submodules
      run: git submodule update --init --recursive
    
    - name: Configure DragonEngine CMake Scripts
      run: cmake --no-warn-unused-cli -S${{github.workspace}} -B${{github.workspace}}/bin -G"Visual Studio 17 2022" --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDRAGON_INSTALL_DIR:String="${{github.workspace}}/sdk_build" ${{ env.BOOST_CMAKE_ARGS }} ${{ env.VULKAN_CMAKE_ARGS }}
      
    - name: Build DragonEngine
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Test DragonEngine
      working-directory: ${{github.workspace}}/bin
      run: ctest -C ${{env.BUILD_TYPE}}
