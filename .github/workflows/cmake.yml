name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  get-linux-dependencies:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Install GLFW Dependencies
      run: sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      
    - name: Prepare Boost Installation Directory
      run: sudo mkdir /usr/boost
      
    - name: Install Boost Binaries
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.0
      with:
        boost_version: 1.79.0
        boost_install_dir: /usr/
        platform-version: 20.04

    - name: Check Vulkan Package Caches
      id: cache-vulkan
      uses: actions/cache@v3
      with: 
        path: /usr/lib/x86_64-linux-gnu/
        key: ${{ runner.os }}-cache-vulkan-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
            ${{ runner.os }}-cache-vulkan-
            ${{ runner.os }}-cache-
            ${{ runner.os }}-

    - name: Check OpenCL Package Caches
      id: cache-opencl
      uses: actions/cache@v3
      with:
        path: |
            /usr/lib/x86_64-linux-gnu/libOpenCL.so
        key: ${{ runner.os }}-cache-opencl-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
            ${{ runner.os }}-cache-opencl-
            ${{ runner.os }}-cache-
            ${{ runner.os }}-

    - if: ${{ steps.cache-vulkan.outputs.cache-hit != 'true' }}
      name: Install Vulkan
      continue-on-error: false
      run: |
          wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
          sudo apt update
          sudo apt install vulkan-sdk

    - if: ${{ steps.cache-opencl.outputs.cache-hit != 'true' }}
      name: Install OpenCL
      continue-on-error: true
      run: |
          sudo apt install ocl-icd-opencl-dev
          
  build-linux-unix-makefiles:
    runs-on: ubuntu-latest
    needs: get-linux-dependencies

    steps:
    - uses: actions/checkout@v3

    - name: Get DragonEngine Submodules
      run: git submodule update --init --recursive

    - name: Configure DragonEngine CMake Scripts
      run: cmake -S${{github.workspace}} --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -B${{github.workspace}}/bin -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDRAGON_INSTALL_DIR:String="${{github.workspace}}/sdk_build" -DBOOST_ROOT:String=${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build DragonEngine
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Test DragonEngine
      working-directory: ${{github.workspace}}/bin
      run: ctest -C ${{env.BUILD_TYPE}}
      
